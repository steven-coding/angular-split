{"version":3,"file":"split.component.spec.js","sourceRoot":"","sources":["split.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { ComponentFixture, TestBed } from '@angular/core/testing';\r\nimport { By }              from '@angular/platform-browser';\r\nimport { DebugElement, Component }    from '@angular/core';\r\n\r\nimport { SplitComponent } from './../../src/components/split.component';\r\nimport { SplitAreaDirective } from './../../src/components/splitArea.directive';\r\nimport { SplitGutterDirective } from './../../src/components/splitGutter.directive';\r\n\r\n\r\n@Component({\r\n    selector: 'test',\r\n    template: `\r\n      <split [gutterSize]=\"gutterSize\">\r\n          <split-area *ngFor=\"let area of areas\" [order]=\"area.order\">{{ area.label }}</split-area>\r\n      </split>`\r\n  })\r\n  class TestComponent {\r\n      areas = [\r\n          {label: 'splitA', order: 1},\r\n          {label: 'splitB', order: 2},\r\n      ]\r\n      gutterSize = 10\r\n  }\r\n\r\n\r\ndescribe('TestComponent', () => {\r\n    let component: TestComponent;\r\n    let fixture: ComponentFixture<TestComponent>;\r\n    let elemAreas: Array<DebugElement>;\r\n    let elemGutters: Array<DebugElement>;\r\n\r\n    beforeEach(() => {\r\n        TestBed.configureTestingModule({\r\n            declarations: [ \r\n                TestComponent, \r\n                SplitComponent, \r\n                SplitAreaDirective, \r\n                SplitGutterDirective,\r\n            ],\r\n        });\r\n\r\n        fixture = TestBed.createComponent(TestComponent);\r\n        component = fixture.componentInstance;\r\n    });\r\n    \r\n    it('CODE: 2 areas should have TEMPLATE: 2 areas + 1 gutter', () => {\r\n        fixture.detectChanges();\r\n\r\n        elemAreas = fixture.debugElement.queryAll(By.css('split-area'));\r\n        expect(elemAreas.length).toEqual(2);\r\n\r\n        elemGutters = fixture.debugElement.queryAll(By.css('split-gutter'));\r\n        expect(elemGutters.length).toEqual(1);\r\n    });\r\n    \r\n    it('CODE: 3 areas should have TEMPLATE: 3 areas + 2 gutters', () => {\r\n        component.areas.push({label: 'splitC', order: 3})\r\n        fixture.detectChanges();\r\n        \r\n        elemAreas = fixture.debugElement.queryAll(By.css('split-area'));\r\n        expect(elemAreas.length).toEqual(3);\r\n        \r\n        elemGutters = fixture.debugElement.queryAll(By.css('split-gutter'));\r\n        expect(elemGutters.length).toEqual(2);\r\n    });\r\n    \r\n    it('CODE: 4 areas should have TEMPLATE: 4 areas + 3 gutters', () => {\r\n        component.areas.push({label: 'splitC', order: 3})\r\n        component.areas.shift()\r\n        component.areas.push({label: 'splitD', order: 4})\r\n        component.areas.push({label: 'splitE', order: 5})\r\n        fixture.detectChanges();\r\n        \r\n        elemAreas = fixture.debugElement.queryAll(By.css('split-area'));\r\n        expect(elemAreas.length).toEqual(4);\r\n        \r\n        elemGutters = fixture.debugElement.queryAll(By.css('split-gutter'));\r\n        expect(elemGutters.length).toEqual(3);\r\n    });\r\n\r\n    // test gutterSize init = css 10px\r\n    // test gutterSize after change = css 10px\r\n\r\n    // test 3 areas with 1 visibility false > prop visibleAreas.length = 2\r\n    // add new area with visibility false > prop visibleAreas.length = 2\r\n    // toggle area visibility false > prop visibleAreas.length = 3\r\n\r\n    // test default areas size: 3 areas -> calc( 33% - 2*gutterSize )\r\n    // test with specific sizes\r\n\r\n    // try to simulate mousedrag..\r\n});"]}